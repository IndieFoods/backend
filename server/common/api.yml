openapi: 3.0.1
info:
  title: IndieFoods
  description: Backend for IndieFoods
  version: 1.0.0
servers:
  - url: /api/v1
tags:
  - name: Auth
    description: Authentication endpoints
  - name: User
    description: User endpoints
  - name: Chef
    description: Chef endpoints
paths:
  /auth/signup-user:
    post:
      tags:
        - Auth
      security:
        - Bearer: []
      summary: Signup a new user
      description: Signup a new user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupUser'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupUserResponse'
  /auth/signup-chef:
    post:
      tags:
        - Auth
      security:
        - Bearer: []
      summary: Signup a new chef
      description: Signup a new chef
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SignupChef'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SignupChefResponse'
  /user/:
    get:
      tags:
        - User
      security:
        - Bearer: []
      summary: Get a user
      description: Get a user
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
  /user/add-address:
    post:
      tags:
        - User
      security:
        - Bearer: []
      summary: Add an address to a user
      description: Add an address to a user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AddAddress'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AddAddressResponse'
  /chef/menuItem/:
    post:
      tags:
        - Chef
      security:
        - Bearer: []
      summary: Add a menu items to a chef
      description: Add a menu items to a chef
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MenuItems'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
    # get:
    #   tags:
    #     - Chef
    #   security:
    #     - Bearer: []
    #   summary: Get all menu items from a chef
    #   description: Get all menu items from a chef
    #   responses:
    #     200:
    #       description: Success
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/MenuItem'
    put:
      tags:
        - Chef
      security:
        - Bearer: []
      summary: Update a menu items from a chef
      description: Update a menu items from a chef
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateMenuItem'
      responses:
        200:
          description: Success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SuccessResponse'
    # delete:
    #   tags:
    #     - Chef
    #   security:
    #     - Bearer: []
    #   summary: Delete a menu item from a chef
    #   description: Delete a menu item from a chef
    #   requestBody:
    #     required: true
    #     content:
    #       application/json:
    #         schema:
    #           $ref: '#/components/schemas/DeleteMenuItem'
    #   responses:
    #     200:
    #       description: Success
    #       content:
    #         application/json:
    #           schema:
    #             $ref: '#/components/schemas/SuccessResponse'

components:
  securitySchemes:
    Bearer:
      type: http
      scheme: bearer
      description: Provide a valid JWT token
  schemas:
    SignupUser:
      type: object
      required:
        - name
        - phone
        - address
      properties:
        name:
          type: string
        phone:
          type: string
        address:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pincode:
                type: string
        email:
          type: string
    SignupUserResponse:
      type: object
      properties:
        message:
          type: string
    SignupChef:
      type: object
      required:
        - name
        - phone
        - address
        - fssaiId
        - foodTypes
      properties:
        name:
          type: string
        phone:
          type: string
        address:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pincode:
                type: string
        fssaiId:
          type: string
        foodTypes:
          type: array
          items:
            type: string
        email:
          type: string
    SignupChefResponse:
      type: object
      properties:
        message:
          type: string
    AddAddress:
      type: object
      required:
        - address
      properties:
        address:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pincode:
                type: string
    AddAddressResponse:
      type: object
      properties:
        message:
          type: string
    SuccessResponse:
      type: object
      properties:
        message:
          type: string
    User:
      type: object
      properties:
        id:
          type: string
        name:
          type: string
        phone:
          type: string
        address:
          type: array
          items:
            type: object
            properties:
              address:
                type: string
              pincode:
                type: string
        email:
          type: string
    MenuItems:
      type: object
      required:
        - menuItems
      properties:
        menuItems:
          type: array
          items:
            type: object
            properties:
              name:
                type: string
              image:
                type: string
              isVeg:
                type: boolean
              type:
                type: string
      
    UpdateMenuItem:
      type: object
      required:
        - menuItems
      properties:
        menuItems:
          type: array
          items:
            type: object
            properties:
              id:
                type: string
              name:
                type: string
              image:
                type: string
              isVeg:
                type: boolean
              type:
                type: string
    # DeleteMenuItem:
    #   type: object
    #   properties:
    #     id:
    #       type: string
    